--创建同义词
CREATE OR REPLACE SYNONYM table_owner.table_name FOR table_owner.table_name;


--------------------------------------------
--查看Oracle数据库中表空间信息的命令方法
select 
a.a1 表空间名称,
c.c2 类型,
c.c3 区管理,
b.b2/1024/1024 表空间大小M,
(b.b2-a.a2)/1024/1024 已使用M,
substr((b.b2-a.a2)/b.b2*100,1,5) 利用率
from 
(select  tablespace_name a1, sum(nvl(bytes,0)) a2 from dba_free_space group by tablespace_name) a,
(select tablespace_name b1,sum(bytes) b2 from dba_data_files group by tablespace_name) b,
(select tablespace_name c1,contents c2,extent_management c3  from dba_tablespaces) c 
where a.a1=b.b1 and c.c1=b.b1;

--检查运行过程中的耗时过多的sql
SELECT se.sid,se.serial#,pr.SPID,se.username,se.osuser,se.status,se.terminal,se.program,si.physical_reads,
 se.MODULE,se.sql_address,st.event,st.p1text,si.block_changes,sq.sql_text
  FROM v$session se, v$session_wait st,v$sess_io si,v$process pr,v$sqlarea sq
  WHERE sq.address=se.sql_address and st.sid=se.sid AND st.sid=si.sid AND se.PADDR=pr.ADDR AND se.sid>6 AND st.event NOT LIKE '%SQL%'      --AND st.wait_time=0 
  ORDER BY physical_reads DESC;

--查找表的所有字段
 SELECT MAX(SUBSTR(SYS_CONNECT_BY_PATH(COLUMN_NAME,','),2)) AS 所有字段
 FROM (SELECT COLUMN_NAME,column_id FROM dba_tab_columns
 WHERE OWNER = 'ZTE_USER' 
 AND TABLE_NAME = 'HN_CUST')
 START WITH column_id = 1 CONNECT BY column_id = ROWNUM;

--WMSYS.WM_CONCAT


--会话特有的临时表 
CREATE GLOBAL TEMPORARY <TABLE_NAME> (<column specification> ) 
ON COMMIT PRESERVE ROWS; 
--事务特有的临时表 
CREATE GLOBAL TEMPORARY <TABLE_NAME> (<column specification> ) 
ON COMMIT DELETE ROWS； 

--创建database_link
create public database link TO_DATA54
  connect to ZTE_USER IDENTIFIED BY ZTE_USER
  using '(DESCRIPTION =
    (ADDRESS_LIST =
      (ADDRESS = (PROTOCOL = TCP)(HOST = 134.175.23.54)(PORT = 1521))
    )
    (CONNECT_DATA =
      (SID = crmtestdb)
    )
  )';

--表重命名
RENAME table_1 TO table_2;

--表分析
EXEC dbms_stats.gather_table_stats(ownname=>'ZTE_USER',tabname=>'HN_CUST',estimate_percent=>DBMS_STATS.AUTO_SAMPLE_SIZE,method_opt=>'for all columns size auto',degree=>DBMS_STATS.DEFAULT_DEGREE,cascade=>true); 

--回滚drop掉的表
select object_name,original_name,partition_name,type,ts_name,createtime,droptime from recyclebin  where original_name like '%IDENTI_BILL%' ;

flashback table "ORI_CUST_IDENTI_BILL_ADD" to before drop;


--恢复删掉的数据
select * from table_name as of timestamp to_timestamp('2011-04-29 19:00','YYYY-MM-DD HH24:MI'); 

/*1.FLASHBACK QUERY*/ 

--闪回到15分钟前 
select *  from orders  as of timestamp (systimestamp - interval '15' minute)  where ...... 
这里可以使用DAY、SECOND、MONTH替换minute，例如： 
SELECT * FROM orders AS OF TIMESTAMP(SYSTIMESTAMP - INTERVAL '2' DAY) 

--闪回到某个时间点 
select  *  from orders  as of timestamp  to_timestamp ('01-Sep-04 16:18:57.845993', 'DD-Mon-RR HH24:MI:SS.FF') where ... 

--闪回到两天前 
select * from orders  as of timestamp (sysdate - 2) where......... 


/*2.FLASHBACK DROP*/ 

  1.flashback table orders to before drop; 
  
  2.如果源表已经重建，可以使用rename to子句： 
  flashback table order to before drop  rename to order_old_version; 
  
/*3.FLASHBACK TABLE*/ 

  1.首先要启用行迁移： 
  alter table order enable row movement; 
  2.闪回表到15分钟前： 
  flashback table order  to timestamp systimestamp - interval '15' minute; 
    闪回到某个时间点： 
  FLASHBACK TABLE order TO TIMESTAMP    TO_TIMESTAMP('2007-09-12 01:15:25 PM','YYYY-MM-DD HH:MI:SS AM') 


--Lockwait：死锁的状态，如果有内容表示被死锁。
select username,lockwait,status,machine,program from v$session where sid in
(select session_id from v$locked_object)

--查看空间文件
SELECT * FROM dba_data_files;

--------------------------------------------------------------------------------------

SELECT 'kill -9 ' || P.SPID, 'ALTER SYSTEM KILL SESSION ''' || S.SID || ',' || S.SERIAL# || ''';', 
S.SID, S.SERIAL#, S.USERNAME, S.MACHINE, S.SQL_HASH_VALUE,
 S.LAST_CALL_ET / 60, S.CLIENT_INFO, S.PREV_HASH_VALUE, CLIENT_INFO
  FROM V$SESSION S, V$PROCESS P
 WHERE S.USERNAME IS NOT NULL
       AND (P.ADDR(+) = S.PADDR)
       AND S.STATUS = 'INACTIVE'
 ORDER BY S.LAST_CALL_ET DESC;
update dc_public set pkey=1 where stype='632';
update dc_public set pkey=0 where stype='632';
SELECT COUNT(1) FROM V$SESSION;

SELECT COUNT(1) FROM V$PROCESS;

--查询数据库活动session
SELECT 'ALTER SYSTEM KILL SESSION ''' || S.SID || ',' || S.SERIAL# || ''';','kill -9 '||SPID,
       S.SID,
       S.SERIAL#,
       S.USERNAME,
       S.MACHINE,
       S.SQL_HASH_VALUE,
       S.LAST_CALL_ET,S.LAST_CALL_ET/60,
       CLIENT_INFO,
       S.STATUS
  FROM V$SESSION S, V$PROCESS P
 WHERE (P.ADDR(+) = S.PADDR)
   AND S.USERNAME IS NOT NULL
   --AND SPID='5275666'
   AND S.STATUS = 'ACTIVE'
 ORDER BY LAST_CALL_ET DESC, S.USERNAME ASC;



--查询具体的SQL
SELECT SQL_TEXT
  FROM V$SQLTEXT
 WHERE HASH_VALUE IN ('3022023851')
 ORDER BY PIECE; 
823003799
2125976362
982730
select * from dba_jobs;

--查找执行时间超过2分钟，并且有多条（5条）同样语句堵塞SQL的sql_hash_value，并拼写杀session的命令
SELECT 'kill -9 ' || P.SPID,
       P.SPID, /*p.pid,s.sid,*/
       S.USERNAME,
       S.MACHINE,
       S.SQL_HASH_VALUE,
       S.LAST_CALL_ET / 60 运行时间,
       S.CLIENT_INFO,
       P.PROGRAM "OSProgram",
       'alter system kill session ''' || S.SID || ',' || S.SERIAL# || ''';'
  FROM V$SESSION S, V$PROCESS P
 WHERE P.ADDR(+) = S.PADDR
   AND S.SQL_HASH_VALUE IN (SELECT S.SQL_HASH_VALUE
                              FROM V$SESSION S
                             WHERE (S.STATUS = 'ACTIVE')
                               AND ((S.USERNAME IS NOT NULL) AND
                                   (NVL(S.OSUSER, 'x') <> 'SYSTEM') AND
                                   (S.TYPE <> 'BACKGROUND'))
                               AND S.USERNAME IN ('CSSS', 'CRM')
                               AND S.LAST_CALL_ET > 10
                             GROUP BY S.SQL_HASH_VALUE
                            HAVING COUNT(*) > 3)
 ORDER BY "USERNAME" ASC, S.SQL_HASH_VALUE;
 
 
 
/*全部杀csss，crm进程脚本*/
SELECT S.CLIENT_INFO,
       P.PROGRAM "OSProgram",
       S.USERNAME,
       S.MACHINE,
       S.SQL_HASH_VALUE,
       S.LAST_CALL_ET / 60 运行时间,
       P.SPID,
       P.PID,
       S.SID,
       'kill -9 ' || P.SPID
  FROM V$SESSION S, V$PROCESS P
 WHERE (S.STATUS = 'ACTIVE')
   AND ((S.USERNAME IS NOT NULL) AND (NVL(S.OSUSER, 'x') <> 'SYSTEM') AND
       (S.TYPE <> 'BACKGROUND'))
   AND (P.ADDR(+) = S.PADDR)
   AND S.USERNAME IN ('CSSS', 'CRM') /* and s.last_call_et > 10*/
 ORDER BY "运行时间" DESC, "USERNAME" ASC, OWNERID, "USERNAME" ASC;
 
 
--查找数据库中被锁的对象
select a.sid,'kill -9 '||b.spid,a.sql_hash_value,machine ,a.username, a.program,a.client_info,a.last_call_et/60,
'alter system kill session '''||a.SID||','||a.SERIAL#||''';'
from v$session a ,v$process b where a.paddr=b.addr 
and b.spid in (select spid from v$process
where addr in (select paddr from v$session 
where sid in (select session_id from v$locked_object)))
order by a.last_call_et desc;

  --查看锁住的存储过程
  select b.* from  v$access a,v$session b where a.sid=b.sid and a.object=upper('P_MID_SERV_FT');

--具体的表：
    select  'ALTER SYSTEM KILL SESSION ''' || se.SID || ',' || se.SERIAL# || ''';',
a.owner,a.object_name,a.subobject_name,a.object_type,l.session_id,l.oracle_username,l.os_user_name,se.SID,se.SERIAL#   
from  all_objects a, v$locked_object l,V$session se 
where a.object_id = l.object_id and se.OSUSER = l.os_user_name
AND a.object_name='SERVICE_CONTROL_SCOPE' ;


SELECT 'ALTER SYSTEM KILL SESSION ''' || C.SID || ',' || C.SERIAL# || ''';',A.INST_ID,
       C.SID,
       C.SERIAL#,
       D.NAME,
       B.OBJECT_NAME,
       C.USERNAME,
       A.OBJECT_ID,
       C.PROGRAM,
       C.STATUS,
       C.OSUSER,
       C.TERMINAL
  FROM GV$LOCKED_OBJECT A, ALL_OBJECTS B, GV$SESSION C, AUDIT_ACTIONS D
 WHERE A.OBJECT_ID = B.OBJECT_ID
   AND A.INST_ID = C.INST_ID(+)
   AND A.SESSION_ID = C.SID(+)
   AND C.COMMAND = D.ACTION   AND TERMINAL IS NOT NULL;

--查看存储过程需要时间
select a.sid , b.username,b.status,
       opname 操作内容,
       decode(sofar,0,1,sofar)/decode(totalwork,0,1,totalwork)*100 完成百分比,
       elapsed_seconds 已经执行的时间,
       time_remaining 预计剩余时间,b.osuser,b.machine,b.program,b.module,b.action,b.sql_address,b.SQL_HASH_VALUE
  from v$session_longops a,v$session b 
where a.sid=b.sid
and b.status='ACTIVE'
--and b.machine='WORKGROUP\CHINA-F2E75C8E3'
order by decode(sofar,0,1,sofar)/decode(totalwork,0,1,totalwork)*100